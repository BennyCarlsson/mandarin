{"version":3,"sources":["vocabularyUtils.js","components/Options.js","components/TheWord.js","components/QuizPage.js","components/ResultPage.js","components/ChooseChapterTitle.js","components/PageFooter.js","components/ChaptersButtons.js","components/ChooseChapters.js","components/UpdateSnackBar.js","serviceWorker.js","App.js","index.js"],"names":["getWordsRandomized","chapters","arguments","length","undefined","quickPlay","wordList","vocabulary","words","forEach","chapter","concat","shuffle","slice","getRandomFromArray","arr","n","result","Array","len","taken","x","Math","floor","random","array","temporaryValue","randomIndex","currentIndex","scrambleOptions","rightOptionWord","scrambledOptions","relevantWords","getAllWords","filter","word","chinese","currentWord","includes","pinyin","push","Object","values","Options","_this$props","this","props","optionPress","react_default","a","createElement","className","Options_OptionsButton","gameWord","Component","style","textTransform","fontSize","OptionsButton","Button_default","variant","size","color","onClick","TheWord","setShowTranslation","showTranslation","answeredWrong","english","QuizPage","classes","progress","replay","Icon_default","components_TheWord","getCurrentWord","components_Options","gameWords","LinearProgress_default","value","root","linearProgressDeterminate","bar","linearProgressDeterminateBar","withStyles","theme","backgroundColor","width","ResultPage","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","key","styles","primaryColor","wrongAnswers","replayIncorrectWords","numberOfQuestions","numberOfWrongAnswers","numberOfRightAnswers","Typography_default","gutterBottom","ResultPage_ReplayButtons","ReplayButtons","react","Fab_default","aria-label","ChooseChapterTitle","withTheme","chooseChapterScrollTop","position","React","PageFooter","window","open","ChapterButtons","startChapter","button","marginBottom","height","components_ChooseChapterTitle","ChaptersButtons","components_PageFooter","SimpleSnackbar","Snackbar_default","anchorOrigin","vertical","horizontal","showUpdateSnackBar","onClose","handleCloseSnackBar","ContentProps","aria-describedby","message","id","action","IconButton_default","isLocalhost","Boolean","location","hostname","match","register","config","navigator","URL","process","origin","addEventListener","swUrl","fetch","then","response","status","headers","get","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","App","_this","call","handleServiceWorkerUpdate","setState","event","reason","AppDidMount","node","scrollListener","target","scrollTop","answerOptions","questionIndex","showStartPage","setNextQuestion","_this$state","question","newQuestionIndex","answerOption","newWrongAnswers","_this$state2","isGameFinished","getGameProgress","wordsRandomized","renderChooseChapter","ChooseChapters","renderResultPage","ResultPage_ResultPage","renderQuizPage","components_QuizPage","ref","CSSTransition","in","timeout","classNames","UpdateSnackBar","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"8LAEaA,EAAqB,WAA6B,IAA5BC,EAA4BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjB,CAAC,YAC7C,GAAoB,cAAhBD,EAAS,GACX,OAAOI,IAET,IAAIC,EAAWC,EACXC,EAAQ,GAEZ,OADAP,EAASQ,QAAQ,SAAAC,GAAO,OAAKF,EAAQA,EAAMG,OAAOL,EAASI,MACpDE,EAAQJ,EAAMK,UAEjBR,EAAY,WAChB,IAAIC,EAAWC,EACXC,EAAQ,GACZ,IAAK,IAAIE,KAAWJ,EAClBE,EAAQA,EAAMG,OAAOL,EAASI,IAEhC,OAAOI,EAAmBN,EAAO,KAE7BM,EAAqB,SAACC,EAAKC,GAC/B,IAAIC,EAAS,IAAIC,MAAMH,GACnBI,EAAMJ,EAAIZ,OACViB,EAAQ,GACZ,GAAIJ,EAAIG,EAAK,MAAO,GACpB,KAAOH,KAAK,CACV,IAAIK,EAAIC,KAAKC,MAAMD,KAAKE,SAAWL,GACnCF,EAAOD,GAAKD,EAAIM,KAAKD,EAAQA,EAAMC,GAAKA,GACxCD,EAAMC,KAAOF,KAAOC,EAAQA,EAAMD,GAAOA,EAE3C,OAAOF,GAGHL,EAAU,SAAAa,GAMd,IALA,IACEC,EACAC,EAFEC,EAAeH,EAAMtB,OAKlB,IAAMyB,GAEXD,EAAcL,KAAKC,MAAMD,KAAKE,SAAWI,GAIzCF,EAAiBD,EAHjBG,GAAgB,GAIhBH,EAAMG,GAAgBH,EAAME,GAC5BF,EAAME,GAAeD,EAGvB,OAAOD,GAGII,EAAkB,SAAAC,GAC7B,IAAKA,EAAiB,MAAO,GAQ7B,IAPA,IACIC,EAAmB,GAGjBC,EAJYC,IAIcC,OAC9B,SAAAC,GAAI,OAAIA,EAAKC,QAAQjC,SAAW2B,EAAgBM,QAAQjC,SAEnD4B,EAAiB5B,OAAS,GAAK6B,EAAc7B,OAAS,GAAG,CAC9D,IACMkC,EAAcL,EADCV,KAAKC,MAAMD,KAAKE,SAAWQ,EAAc7B,SAG5DkC,IAAgBP,GACfC,EAAiBO,SAASD,IAC3BA,EAAYE,SAAWT,EAAgBS,QAEvCR,EAAiBS,KAAKH,GAM1B,OADAN,EADWT,KAAKC,MAAsB,EAAhBD,KAAKE,WACJM,EAChBC,GAIHE,EAAc,WAClB,IAAI3B,EAAW,GAIf,OAHAmC,OAAOC,OAAOnC,GAAYE,QAAQ,SAAAC,GAAO,OACvCA,EAAQD,QAAQ,SAAA0B,GAAI,OAAI7B,EAASkC,KAAKL,OAEjC7B,2BChFHqC,mLACK,IAAAC,EACmCC,KAAKC,MAAvCC,EADDH,EACCG,YAAahB,EADda,EACcb,iBACrB,OACEiB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAACE,EAAD,CACEL,YAAa,kBAAMA,EAAYhB,EAAiB,KAChDsB,SAAUtB,EAAiB,GAAKA,EAAiB,GAAGQ,OAAS,SAGjES,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAACE,EAAD,CACEL,YAAa,kBAAMA,EAAYhB,EAAiB,KAChDsB,SAAUtB,EAAiB,GAAKA,EAAiB,GAAGQ,OAAS,SAGjES,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAACE,EAAD,CACEL,YAAa,kBAAMA,EAAYhB,EAAiB,KAChDsB,SAAUtB,EAAiB,GAAKA,EAAiB,GAAGQ,OAAS,SAGjES,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAACE,EAAD,CACEL,YAAa,kBAAMA,EAAYhB,EAAiB,KAChDsB,SAAUtB,EAAiB,GAAKA,EAAiB,GAAGQ,OAAS,iBA1BnDe,aAkChBC,EAAQ,CACZC,cAAe,OACfC,SAAU,UAGNC,EAAgB,SAAAZ,GACpB,OACEE,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBACdH,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CACEM,MAAOA,EACPJ,UAAU,eACVS,QAAQ,YACRC,KAAK,QACLC,MAAM,UACNC,QAASjB,EAAMC,aAEdD,EAAMO,YAMAV,ICxBAqB,EAlCC,SAAAlB,GACd,OACEE,EAAAC,EAAAC,cAAA,OACEC,UAAU,aACVY,QAAS,kBAAMjB,EAAMmB,oBAAoBnB,EAAMoB,mBAE/ClB,EAAAC,EAAAC,cAAA,MACEC,UACEL,EAAMT,aAAeS,EAAMT,YAAYD,QAAQjC,OAAS,EACpD,eACA,WAGL2C,EAAMT,aAAeS,EAAMT,YAAYD,SAE1CY,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBACbL,EAAMqB,eAAiBrB,EAAMT,aAAeS,EAAMT,YAAYE,QAEjES,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aACbL,EAAMqB,eAAiBrB,EAAMT,aAAeS,EAAMT,YAAY+B,QAC9DtB,EAAMoB,kBACJpB,EAAMqB,gBACNrB,EAAMoB,iBACPpB,EAAMT,YAAY+B,SAEtBpB,EAAAC,EAAAC,cAAA,YACGJ,EAAMoB,kBACJpB,EAAMqB,eACPrB,EAAMT,YAAY+B,qDCbtBC,mLACK,IAAAzB,EAC+BC,KAAKC,MAAnCwB,EADD1B,EACC0B,QAASC,EADV3B,EACU2B,SAAUC,EADpB5B,EACoB4B,OAC3B,OACExB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAACuB,EAAAxB,EAAD,CAAMc,QAAS,kBAAMS,KAAUrB,UAAU,cAAzC,cAGAH,EAAAC,EAAAC,cAACwB,EAAD,CACErC,YAAaQ,KAAKC,MAAM6B,iBACxBR,cAAetB,KAAKC,MAAMqB,cAC1BF,mBAAoBpB,KAAKC,MAAMmB,mBAC/BC,gBAAiBrB,KAAKC,MAAMoB,kBAE9BlB,EAAAC,EAAAC,cAAC0B,EAAD,CACEC,UAAWhC,KAAKC,MAAM+B,UACtB9B,YAAaF,KAAKC,MAAMC,YACxBhB,iBAAkBc,KAAKC,MAAMf,mBAE/BiB,EAAAC,EAAAC,cAAC4B,EAAA7B,EAAD,CACEW,QAAQ,cACRmB,MAAOR,EACPD,QAAS,CACPU,KAAMV,EAAQW,0BACdC,IAAKZ,EAAQa,wCAxBF7B,aAgCR8B,uBA1CA,SAAAC,GAAK,MAAK,CACvBJ,0BAA2B,CACzBK,gBAAiB,UACjBC,MAAO,SAETJ,6BAA8B,CAC5BG,gBAAiB,aAoCNF,CAAmBf,qCC1CrBmB,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAA/C,OAAAiD,EAAA,EAAAjD,CAAAI,KAAA2C,GAAA/C,OAAAkD,EAAA,EAAAlD,CAAAI,KAAAJ,OAAAmD,EAAA,EAAAnD,CAAA+C,GAAAK,MAAAhD,KAAA3C,YAAA,OAAAuC,OAAAqD,EAAA,EAAArD,CAAA+C,EAAAC,GAAAhD,OAAAsD,EAAA,EAAAtD,CAAA+C,EAAA,EAAAQ,IAAA,SAAAjB,MAAA,WAEI,IAAMkB,EAAS,CACbC,aAAc,CACZpC,MAAO,UAHJlB,EAM2DC,KAAKC,MAA/D+B,EANDjC,EAMCiC,UAAWsB,EANZvD,EAMYuD,aAAc3B,EAN1B5B,EAM0B4B,OAAQ4B,EANlCxD,EAMkCwD,qBACnCC,EAAoBxB,EAAYA,EAAU1E,OAAS,EACnDmG,EAAuBH,EAAeA,EAAahG,OAAS,EAC5DoG,EAAuBF,EAAoBC,EACjD,OACEtD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CAAYM,MAAO0C,EAAOC,aAActC,QAAQ,WAAW6C,cAAY,GAAvE,iBAGAzD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CAAYM,MAAO0C,EAAOC,aAActC,QAAQ,WAAW6C,cAAY,GACpEF,EADH,MAC4BF,GAE5BrD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CACEM,MAAO0C,EAAOC,aACdtC,QAAQ,aACR6C,cAAY,GAHd,WAKWF,EALX,0BAKwD,IACrDF,GAEHrD,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAACwD,EAAD,CACElC,OAAQA,EACR4B,qBAAsBA,EACtBE,qBAAsBA,SAhChCd,EAAA,CAAgClC,aAuC1BqD,EAAgB,SAAA7D,GACpB,OACEE,EAAAC,EAAAC,cAAC0D,EAAA,SAAD,KACG9D,EAAMwD,qBAAuB,EAC5BtD,EAAAC,EAAAC,cAAC2D,EAAA5D,EAAD,CACEW,QAAQ,WACRkD,aAAW,SACX/C,QAAS,kBAAMjB,EAAMsD,yBAErBpD,EAAAC,EAAAC,cAACuB,EAAAxB,EAAD,eACAD,EAAAC,EAAAC,cAAA,6BAAqBJ,EAAMwD,qBAA3B,MAGF,GAEFtD,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CACEY,KAAK,SACLC,MAAM,UACNgD,aAAW,SACX/C,QAAS,kBAAMjB,EAAM0B,WAErBxB,EAAAC,EAAAC,cAACuB,EAAAxB,EAAD,mBACAD,EAAAC,EAAAC,cAAA,sBC5CO6D,GDkDAC,sBAAYxB,oLCtEhB,IACCyB,EAA2BpE,KAAKC,MAAhCmE,uBACR,OACEjE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CACEM,MAAO,CACLO,MAAO,QACPoD,SAAU,WACVzD,SAAU,GAAKwD,EAAyB,GAAK,MAE/CrD,QAAQ,WACR6C,cAAY,GAPd,gCALyBU,IAAM7D,YCoBxB8D,EApBI,WACjB,OACEpE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,gEAGAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,0BACdH,EAAAC,EAAAC,cAAA,QACEa,QAAS,kBACPsD,OAAOC,KAAK,4CAA6C,YAG3DtE,EAAAC,EAAAC,cAACuB,EAAAxB,EAAD,CAAME,UAAW,mBAEnBH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBAAhB,eC6MOoE,EAzNQ,SAAAzE,GAAS,IACtBwB,EAA0BxB,EAA1BwB,QAASkD,EAAiB1E,EAAjB0E,aAEjB,OACExE,EAAAC,EAAAC,cAAC0D,EAAA,SAAD,KACE5D,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CACEW,QAAQ,YACRC,KAAK,QACLC,MAAM,UACNX,UAAWmB,EAAQmD,OACnBlE,MAAO,CAAE+B,gBAAiB,UAAWxB,MAAO,uBAC5CC,QAAS,kBAAMyD,EAAa,eAE5BxE,EAAAC,EAAAC,cAACuB,EAAAxB,EAAD,mBARF,wBAUAD,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CACEW,QAAQ,YACRC,KAAK,QACLC,MAAM,UACNX,UAAWmB,EAAQmD,OACnB1D,QAAS,kBAAMyD,EAAa,cAL9B,oBASAxE,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CACEW,QAAQ,YACRC,KAAK,QACLC,MAAM,UACNX,UAAWmB,EAAQmD,OACnB1D,QAAS,kBAAMyD,EAAa,eAL9B,qBASAxE,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CACEW,QAAQ,YACRC,KAAK,QACLC,MAAM,UACNX,UAAWmB,EAAQmD,OACnB1D,QAAS,kBAAMyD,EAAa,eAL9B,qBASAxE,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CACEW,QAAQ,YACRC,KAAK,QACLC,MAAM,UACNX,UAAWmB,EAAQmD,OACnB1D,QAAS,kBAAMyD,EAAa,eAL9B,qBASAxE,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CACEW,QAAQ,YACRC,KAAK,QACLC,MAAM,UACNX,UAAWmB,EAAQmD,OACnB1D,QAAS,kBAAMyD,EAAa,eAL9B,qBASAxE,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CACEW,QAAQ,YACRC,KAAK,QACLC,MAAM,UACNX,UAAWmB,EAAQmD,OACnB1D,QAAS,kBAAMyD,EAAa,eAL9B,qBASAxE,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CACEW,QAAQ,YACRC,KAAK,QACLC,MAAM,UACNX,UAAWmB,EAAQmD,OACnB1D,QAAS,kBAAMyD,EAAa,gBAL9B,oBASAxE,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CACEW,QAAQ,YACRC,KAAK,QACLC,MAAM,UACNX,UAAWmB,EAAQmD,OACnB1D,QAAS,kBAAMyD,EAAa,gBAL9B,oBASAxE,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CACEW,QAAQ,YACRC,KAAK,QACLC,MAAM,UACNX,UAAWmB,EAAQmD,OACnB1D,QAAS,kBAAMyD,EAAa,gBAL9B,oBASAxE,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CACEW,QAAQ,YACRC,KAAK,QACLC,MAAM,UACNX,UAAWmB,EAAQmD,OACnB1D,QAAS,kBAAMyD,EAAa,gBAL9B,oBASAxE,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CACEW,QAAQ,YACRC,KAAK,QACLC,MAAM,UACNX,UAAWmB,EAAQmD,OACnB1D,QAAS,kBAAMyD,EAAa,gBAL9B,oBASAxE,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CACEW,QAAQ,YACRC,KAAK,QACLC,MAAM,UACNX,UAAWmB,EAAQmD,OACnB1D,QAAS,kBAAMyD,EAAa,gBAL9B,oBASAxE,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CACEW,QAAQ,YACRC,KAAK,QACLC,MAAM,UACNX,UAAWmB,EAAQmD,OACnB1D,QAAS,kBAAMyD,EAAa,gBAL9B,oBASAxE,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CACEW,QAAQ,YACRC,KAAK,QACLC,MAAM,UACNX,UAAWmB,EAAQmD,OACnB1D,QAAS,kBAAMyD,EAAa,gBAL9B,oBASAxE,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CACEW,QAAQ,YACRC,KAAK,QACLC,MAAM,UACNX,UAAWmB,EAAQmD,OACnB1D,QAAS,kBAAMyD,EAAa,gBAL9B,oBASAxE,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CACEW,QAAQ,YACRC,KAAK,QACLC,MAAM,UACNX,UAAWmB,EAAQmD,OACnB1D,QAAS,kBAAMyD,EAAa,iBAL9B,qBASAxE,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CACEW,QAAQ,YACRC,KAAK,QACLC,MAAM,UACNX,UAAWmB,EAAQmD,OACnB1D,QAAS,kBAAMyD,EAAa,iBAL9B,qBASAxE,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CACEW,QAAQ,YACRC,KAAK,QACLC,MAAM,UACNX,UAAWmB,EAAQmD,OACnB1D,QAAS,kBAAMyD,EAAa,iBAL9B,qBASAxE,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CACEW,QAAQ,YACRC,KAAK,QACLC,MAAM,UACNX,UAAWmB,EAAQmD,OACnB1D,QAAS,kBAAMyD,EAAa,iBAL9B,qBASAxE,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CACEW,QAAQ,YACRC,KAAK,QACLC,MAAM,UACNX,UAAWmB,EAAQmD,OACnB1D,QAAS,kBAAMyD,EAAa,iBAL9B,qBASAxE,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CACEW,QAAQ,YACRC,KAAK,QACLC,MAAM,UACNX,UAAWmB,EAAQmD,OACnB1D,QAAS,kBAAMyD,EAAa,iBAL9B,qBASAxE,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CACEW,QAAQ,YACRC,KAAK,QACLC,MAAM,UACNX,UAAWmB,EAAQmD,OACnB1D,QAAS,kBAAMyD,EAAa,iBAL9B,uBC1LSpC,uBAlBA,CACbqC,OAAQ,CAAEC,aAAc,MAAOC,OAAQ,SAiB1BvC,CAdO,SAAAtC,GAAS,IACrBwB,EAAkDxB,EAAlDwB,QAASkD,EAAyC1E,EAAzC0E,aAAcP,EAA2BnE,EAA3BmE,uBAE/B,OACEjE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAC0E,EAAD,CAAoBX,uBAAwBA,IAC5CjE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAC2E,EAAD,CAAgBvD,QAASA,EAASkD,aAAcA,IAChDxE,EAAAC,EAAAC,cAAC4E,EAAD,qDCkBOC,MA9Bf,SAAwBjF,GACtB,OACEE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC8E,EAAA/E,EAAD,CACEgF,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdb,KAAMxE,EAAMsF,mBACZC,QAASvF,EAAMwF,oBACfC,aAAc,CACZC,mBAAoB,cAEtBC,QAASzF,EAAAC,EAAAC,cAAA,QAAMwF,GAAG,cAAT,+BACTC,OAAQ,CACN3F,EAAAC,EAAAC,cAAC0F,EAAA3F,EAAD,CACE+C,IAAI,QACJc,aAAW,QACXhD,MAAM,UACNX,UAAW,sBACXY,QAASjB,EAAMwF,qBAEftF,EAAAC,EAAAC,cAACuB,EAAAxB,EAAD,oBCjBN4F,EAAcC,QACW,cAA7BzB,OAAO0B,SAASC,UAEe,UAA7B3B,OAAO0B,SAASC,UAEhB3B,OAAO0B,SAASC,SAASC,MACvB,2DAIC,SAASC,EAASC,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIC,IAAIC,YAAwBjC,OAAO0B,UAC3CQ,SAAWlC,OAAO0B,SAASQ,OAIvC,OAGFlC,OAAOmC,iBAAiB,OAAQ,WAC9B,IAAMC,EAAK,GAAA9I,OAAM2I,YAAN,sBAEPT,IA2DV,SAAiCY,EAAON,GAEtCO,MAAMD,GACHE,KAAK,SAAAC,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7CZ,UAAUa,cAAcC,MAAMP,KAAK,SAAAQ,GACjCA,EAAaC,aAAaT,KAAK,WAC7BtC,OAAO0B,SAASsB,aAKpBC,EAAgBb,EAAON,KAG1BoB,MAAM,WACLC,QAAQC,IACN,mEA/EAC,CAAwBjB,EAAON,GAI/BC,UAAUa,cAAcC,MAAMP,KAAK,WACjCa,QAAQC,IACN,+GAMJH,EAAgBb,EAAON,MAM/B,SAASmB,EAAgBb,EAAON,GAC9BC,UAAUa,cACPf,SAASO,GACTE,KAAK,SAAAQ,GACJA,EAAaQ,cAAgB,WAC3B,IAAMC,EAAmBT,EAAaU,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACf3B,UAAUa,cAAce,YAK1BR,QAAQC,IAAI,6CAGRtB,EAAO8B,UACT9B,EAAO8B,SAASd,KAMlBK,QAAQC,IAAI,sCAGRtB,EAAO+B,WACT/B,EAAO+B,UAAUf,SAO5BI,MAAM,SAAAY,GACLX,QAAQW,MAAM,4CAA6CA,SCkGlDC,cAhLb,SAAAA,EAAYtI,GAAO,IAAAuI,EAAA,OAAA5I,OAAAiD,EAAA,EAAAjD,CAAAI,KAAAuI,IACjBC,EAAA5I,OAAAkD,EAAA,EAAAlD,CAAAI,KAAAJ,OAAAmD,EAAA,EAAAnD,CAAA2I,GAAAE,KAAAzI,KAAMC,KAMRyI,0BAA4B,SAAApB,GAC1BkB,EAAKG,SAAS,CAAEpD,oBAAoB,KARnBiD,EAWnB/C,oBAAsB,SAACmD,EAAOC,GACb,cAAXA,EAKJL,EAAKG,SAAS,CAAEpD,oBAAoB,IAJlCoC,QAAQC,IAAI,eAbGY,EAoBnBM,YAAc,SAAAC,GACRA,GACFA,EAAKpC,iBAAiB,SAAU6B,EAAKQ,iBAtBtBR,EA0BnBQ,eAAiB,SAAAJ,GACfJ,EAAKG,SAAS,CAAEvE,uBAAwBwE,EAAMK,OAAOC,aA3BpCV,EA8BnBN,MAAQ,CACNlG,UAAW,GACXsB,aAAc,GACd6F,cAAe,GACfjK,iBAAkB,GAClBkK,cAAe,EACf9H,eAAe,EACf+H,eAAe,EACfhI,iBAAiB,EACjB+C,uBAAwB,EACxBmB,oBAAoB,GAxCHiD,EA2CnB7G,OAAS,WACP6G,EAAKG,SAAS,CACZU,eAAe,KA7CAb,EAiDnBjF,qBAAuB,WACrB,IAAM5F,EAAQ6K,EAAKN,MAAM5E,aACzBkF,EAAKG,SAAS,CACZ3G,UAAWrE,EACXuB,iBAAkBF,EAAgBrB,EAAM,IACxC2F,aAAc,GACd6F,cAAe,GACfC,cAAe,EACf9H,eAAe,EACfD,iBAAiB,KA1DFmH,EA8DnBc,gBAAkB,WAAM,IAAAC,EACef,EAAKN,MAAlClG,EADcuH,EACdvH,UAAWoH,EADGG,EACHH,cACbI,EAAWxH,EAAUoH,GACrBK,EAAmBL,EAAgB,EACzCZ,EAAKG,SAAS,CACZS,cAAeK,EACfjK,YAAagK,EACblI,eAAe,EACfpC,iBAAkBF,EAAgBgD,EAAUyH,IAC5CpI,iBAAiB,KAvEFmH,EA0EnBpH,mBAAqB,SAAAC,GACnBmH,EAAKG,SAAS,CAAEtH,qBA3ECmH,EA6EnBtI,YAAc,SAAAwJ,GACZ,GAAIA,IAAiBlB,EAAK1G,iBACxB0G,EAAKc,uBACA,IAAKd,EAAKN,MAAM5G,cAAe,CACpC,IAAIqI,EAAkBnB,EAAKN,MAAM5E,aACjCqG,EAAgBhK,KAAK6I,EAAK1G,kBAC1B0G,EAAKG,SAAS,CAAErH,eAAe,EAAMgC,aAAcqG,MAnFpCnB,EAuFnB1G,eAAiB,WAAM,IAAA8H,EACgBpB,EAAKN,MAC1C,OAFqB0B,EACb5H,UADa4H,EACFR,gBAxFFZ,EA4FnBqB,eAAiB,WACf,OACErB,EAAKN,MAAMlG,WACXwG,EAAKN,MAAMkB,eAAiBZ,EAAKN,MAAMlG,UAAU1E,QA/FlCkL,EAkGnBsB,gBAAkB,WAChB,OAAItB,EAAKN,MAAMlG,WAAawG,EAAKN,MAAMkB,cAC7BZ,EAAKN,MAAMkB,cAAgBZ,EAAKN,MAAMlG,UAAU1E,OAAU,IAE7D,GAtGUkL,EAyGnB7D,aAAe,SAAA9G,GACb,IAAMkM,EAAkB5M,EAAmB,CAACU,IAC5C2K,EAAKG,SAAS,CACZ3G,UAAW+H,EACX7K,iBAAkBF,EAAgB+K,EAAgB,IAClDV,eAAe,EACfD,cAAe,EACf9H,eAAe,EACfD,iBAAiB,EACjBiC,aAAc,MAlHCkF,EAqHnBwB,oBAAsB,WACpB,OACE7J,EAAAC,EAAAC,cAAC4J,EAAD,CACE7F,uBAAwBoE,EAAKN,MAAM9D,uBACnCO,aAAc6D,EAAK7D,gBAzHN6D,EA8HnB0B,iBAAmB,WACjB,OACE/J,EAAAC,EAAAC,cAAC8J,EAAD,CACE7G,aAAckF,EAAKN,MAAM5E,aACzBtB,UAAWwG,EAAKN,MAAMlG,UACtBL,OAAQ6G,EAAK7G,OACb4B,qBAAsBiF,EAAKjF,wBApIdiF,EAyInB4B,eAAiB,WACf,OACEjK,EAAAC,EAAAC,cAACgK,EAAD,CACE1I,OAAQ6G,EAAK7G,OACbG,eAAgB0G,EAAK1G,eACrBR,cAAekH,EAAKN,MAAM5G,cAC1BU,UAAWwG,EAAKN,MAAMlG,UACtB9B,YAAasI,EAAKtI,YAClBhB,iBAAkBsJ,EAAKN,MAAMhJ,iBAC7BwC,SAAU8G,EAAKsB,kBACf1I,mBAAoBoH,EAAKpH,mBACzBC,gBAAiBmH,EAAKN,MAAM7G,mBAlJhC+F,EAAuB,CACrBgB,SAAUI,EAAKE,4BAHAF,wEAyJjB,OACErI,EAAAC,EAAAC,cAAA,OAAKiK,IAAKtK,KAAK8I,YAAaxI,UAAU,OACnCN,KAAKgK,sBACN7J,EAAAC,EAAAC,cAACkK,EAAA,EAAD,CACEC,IAAKxK,KAAKkI,MAAMmB,cAChBoB,QAAS,IACTC,WAAW,wBAEXvK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACZN,KAAK6J,iBACF7J,KAAKkK,mBACLlK,KAAKoK,mBAGbjK,EAAAC,EAAAC,cAACsK,EAAD,CACElF,oBAAqBzF,KAAKyF,oBAC1BF,mBAAoBvF,KAAKkI,MAAM3C,6BA1KvB9E,aCJlBmK,IAASC,OAAO1K,EAAAC,EAAAC,cAACyK,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.3048f97d.chunk.js","sourcesContent":["import vocabulary from \"./vocabulary\"\r\n\r\nexport const getWordsRandomized = (chapters = [\"chapter1\"]) => {\r\n  if (chapters[0] === \"quickplay\") {\r\n    return quickPlay()\r\n  }\r\n  let wordList = vocabulary\r\n  let words = []\r\n  chapters.forEach(chapter => (words = words.concat(wordList[chapter])))\r\n  return shuffle(words.slice())\r\n}\r\nconst quickPlay = () => {\r\n  let wordList = vocabulary\r\n  let words = []\r\n  for (let chapter in wordList) {\r\n    words = words.concat(wordList[chapter])\r\n  }\r\n  return getRandomFromArray(words, 10)\r\n}\r\nconst getRandomFromArray = (arr, n) => {\r\n  let result = new Array(arr)\r\n  let len = arr.length\r\n  let taken = []\r\n  if (n > len) return []\r\n  while (n--) {\r\n    var x = Math.floor(Math.random() * len)\r\n    result[n] = arr[x in taken ? taken[x] : x]\r\n    taken[x] = --len in taken ? taken[len] : len\r\n  }\r\n  return result\r\n}\r\n\r\nconst shuffle = array => {\r\n  var currentIndex = array.length,\r\n    temporaryValue,\r\n    randomIndex\r\n\r\n  // While there remain elements to shuffle...\r\n  while (0 !== currentIndex) {\r\n    // Pick a remaining element...\r\n    randomIndex = Math.floor(Math.random() * currentIndex)\r\n    currentIndex -= 1\r\n\r\n    // And swap it with the current element.\r\n    temporaryValue = array[currentIndex]\r\n    array[currentIndex] = array[randomIndex]\r\n    array[randomIndex] = temporaryValue\r\n  }\r\n\r\n  return array\r\n}\r\n\r\nexport const scrambleOptions = rightOptionWord => {\r\n  if (!rightOptionWord) return []\r\n  const gameWords = getAllWords()\r\n  let scrambledOptions = []\r\n\r\n  //Todo fix problem if to few of a word with that length\r\n  const relevantWords = gameWords.filter(\r\n    word => word.chinese.length === rightOptionWord.chinese.length\r\n  )\r\n  while (scrambledOptions.length < 4 && relevantWords.length > 4) {\r\n    const randomNumber = Math.floor(Math.random() * relevantWords.length)\r\n    const currentWord = relevantWords[randomNumber]\r\n    if (\r\n      currentWord !== rightOptionWord &&\r\n      !scrambledOptions.includes(currentWord) &&\r\n      currentWord.pinyin !== rightOptionWord.pinyin\r\n    ) {\r\n      scrambledOptions.push(currentWord)\r\n    }\r\n  }\r\n\r\n  const nr = Math.floor(Math.random() * 4)\r\n  scrambledOptions[nr] = rightOptionWord\r\n  return scrambledOptions\r\n}\r\n\r\n//Todo this should be done once at the start, saved and reused\r\nconst getAllWords = () => {\r\n  let wordList = []\r\n  Object.values(vocabulary).forEach(chapter =>\r\n    chapter.forEach(word => wordList.push(word))\r\n  )\r\n  return wordList\r\n}\r\n","import React, { Component } from \"react\"\r\nimport \"../App.css\"\r\nimport Button from \"@material-ui/core/Button\"\r\n\r\nclass Options extends Component {\r\n  render() {\r\n    const { optionPress, scrambledOptions } = this.props\r\n    return (\r\n      <div className=\"optionsDiv\">\r\n        <div className=\"optionButton\">\r\n          <OptionsButton\r\n            optionPress={() => optionPress(scrambledOptions[0])}\r\n            gameWord={scrambledOptions[0] ? scrambledOptions[0].pinyin : \"...\"}\r\n          />\r\n        </div>\r\n        <div className=\"optionButton\">\r\n          <OptionsButton\r\n            optionPress={() => optionPress(scrambledOptions[1])}\r\n            gameWord={scrambledOptions[1] ? scrambledOptions[1].pinyin : \"...\"}\r\n          />\r\n        </div>\r\n        <div className=\"optionButton\">\r\n          <OptionsButton\r\n            optionPress={() => optionPress(scrambledOptions[2])}\r\n            gameWord={scrambledOptions[2] ? scrambledOptions[2].pinyin : \"...\"}\r\n          />\r\n        </div>\r\n        <div className=\"optionButton\">\r\n          <OptionsButton\r\n            optionPress={() => optionPress(scrambledOptions[3])}\r\n            gameWord={scrambledOptions[3] ? scrambledOptions[3].pinyin : \"...\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst style = {\r\n  textTransform: \"none\",\r\n  fontSize: \"1.5rem\"\r\n}\r\n\r\nconst OptionsButton = props => {\r\n  return (\r\n    <span className=\"optionButton\">\r\n      <Button\r\n        style={style}\r\n        className=\"optionButton\"\r\n        variant=\"contained\"\r\n        size=\"large\"\r\n        color=\"primary\"\r\n        onClick={props.optionPress}\r\n      >\r\n        {props.gameWord}\r\n      </Button>\r\n    </span>\r\n  )\r\n}\r\n\r\nexport default Options\r\n","import React from \"react\"\r\n\r\nconst TheWord = props => {\r\n  return (\r\n    <div\r\n      className=\"theWordDiv\"\r\n      onClick={() => props.setShowTranslation(!props.showTranslation)}\r\n    >\r\n      <h1\r\n        className={\r\n          props.currentWord && props.currentWord.chinese.length > 2\r\n            ? \"theWordSmall\"\r\n            : \"theWord\"\r\n        }\r\n      >\r\n        {props.currentWord && props.currentWord.chinese}\r\n      </h1>\r\n      <span className=\"wrong-pinyin\">\r\n        {props.answeredWrong && props.currentWord && props.currentWord.pinyin}\r\n      </span>\r\n      <span className=\"wrong-eng\">\r\n        {props.answeredWrong && props.currentWord && props.currentWord.english}\r\n        {props.showTranslation &&\r\n          !props.answeredWrong &&\r\n          !props.showTranslation &&\r\n          props.currentWord.english}\r\n      </span>\r\n      <span>\r\n        {props.showTranslation &&\r\n          !props.answeredWrong &&\r\n          props.currentWord.english}\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TheWord\r\n","import React, { Component } from \"react\"\r\nimport Options from \"./Options\"\r\nimport TheWord from \"./TheWord\"\r\nimport { withStyles } from \"@material-ui/core/styles\"\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\"\r\nimport Icon from \"@material-ui/core/Icon\"\r\n\r\nconst styles = theme => ({\r\n  linearProgressDeterminate: {\r\n    backgroundColor: \"#8f9bee\",\r\n    width: \"100vw\"\r\n  },\r\n  linearProgressDeterminateBar: {\r\n    backgroundColor: \"#3f51b5\"\r\n  }\r\n})\r\n\r\nclass QuizPage extends Component {\r\n  render() {\r\n    const { classes, progress, replay } = this.props\r\n    return (\r\n      <div className=\"quizPageWrapper\">\r\n        <Icon onClick={() => replay()} className=\"backButton\">\r\n          arrow_back\r\n        </Icon>\r\n        <TheWord\r\n          currentWord={this.props.getCurrentWord()}\r\n          answeredWrong={this.props.answeredWrong}\r\n          setShowTranslation={this.props.setShowTranslation}\r\n          showTranslation={this.props.showTranslation}\r\n        />\r\n        <Options\r\n          gameWords={this.props.gameWords}\r\n          optionPress={this.props.optionPress}\r\n          scrambledOptions={this.props.scrambledOptions}\r\n        />\r\n        <LinearProgress\r\n          variant=\"determinate\"\r\n          value={progress}\r\n          classes={{\r\n            root: classes.linearProgressDeterminate,\r\n            bar: classes.linearProgressDeterminateBar\r\n          }}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(QuizPage)\r\n","import React, { Component, Fragment } from \"react\"\r\nimport { withTheme } from \"@material-ui/core/styles\"\r\nimport Fab from \"@material-ui/core/Fab\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport Icon from \"@material-ui/core/Icon\"\r\nimport Button from \"@material-ui/core/Button\"\r\n\r\nexport class ResultPage extends Component {\r\n  render() {\r\n    const styles = {\r\n      primaryColor: {\r\n        color: \"white\"\r\n      }\r\n    }\r\n    const { gameWords, wrongAnswers, replay, replayIncorrectWords } = this.props\r\n    const numberOfQuestions = gameWords ? gameWords.length : 0\r\n    const numberOfWrongAnswers = wrongAnswers ? wrongAnswers.length : 0\r\n    const numberOfRightAnswers = numberOfQuestions - numberOfWrongAnswers\r\n    return (\r\n      <div className=\"resultPageWrapper\">\r\n        <Typography style={styles.primaryColor} variant=\"display4\" gutterBottom>\r\n          很好!\r\n        </Typography>\r\n        <Typography style={styles.primaryColor} variant=\"display4\" gutterBottom>\r\n          {numberOfRightAnswers} / {numberOfQuestions}\r\n        </Typography>\r\n        <Typography\r\n          style={styles.primaryColor}\r\n          variant=\"subheading\"\r\n          gutterBottom\r\n        >\r\n          You got {numberOfRightAnswers} correct answers out of{\" \"}\r\n          {numberOfQuestions}\r\n        </Typography>\r\n        <br />\r\n\r\n        <ReplayButtons\r\n          replay={replay}\r\n          replayIncorrectWords={replayIncorrectWords}\r\n          numberOfWrongAnswers={numberOfWrongAnswers}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst ReplayButtons = props => {\r\n  return (\r\n    <Fragment>\r\n      {props.numberOfWrongAnswers > 0 ? (\r\n        <Fab\r\n          variant=\"extended\"\r\n          aria-label=\"replay\"\r\n          onClick={() => props.replayIncorrectWords()}\r\n        >\r\n          <Icon>replay</Icon>\r\n          <p>Incorrect words ({props.numberOfWrongAnswers})</p>\r\n        </Fab>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <Button\r\n        size=\"medium\"\r\n        color=\"inherit\"\r\n        aria-label=\"replay\"\r\n        onClick={() => props.replay()}\r\n      >\r\n        <Icon>arrow_back</Icon>\r\n        <p> Back </p>\r\n      </Button>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default withTheme()(ResultPage)\r\n","import React from \"react\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\n\r\nclass ChooseChapterTitle extends React.Component {\r\n  render() {\r\n    const { chooseChapterScrollTop } = this.props\r\n    return (\r\n      <div className=\"pickChapterTitle\">\r\n        <Typography\r\n          style={{\r\n            color: \"white\",\r\n            position: \"absolute\",\r\n            fontSize: 30 - chooseChapterScrollTop / 10 + \"px\"\r\n          }}\r\n          variant=\"display1\"\r\n          gutterBottom\r\n        >\r\n          Level A Chinese Quiz\r\n        </Typography>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ChooseChapterTitle\r\n","import React from \"react\"\r\nimport Icon from \"@material-ui/core/Icon\"\r\n\r\nconst PageFooter = () => {\r\n  return (\r\n    <div className=\"startPageFooter\">\r\n      <span className=\"footerText\">\r\n        Send any feedback or questions to carlsson.benny93@gmail.com\r\n      </span>\r\n      <span className=\"versionNrAndGithubLogo\">\r\n        <span\r\n          onClick={() =>\r\n            window.open(\"https://github.com/BennyCarlsson/mandarin\", \"_blank\")\r\n          }\r\n        >\r\n          <Icon className={\"fab fa-github\"} />\r\n        </span>\r\n        <span className=\"footerVersionNr\"> v.1.3.4</span>\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PageFooter\r\n","import React, { Fragment } from \"react\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport Icon from \"@material-ui/core/Icon\"\r\n\r\n//Todo make this dynamic\r\nconst ChapterButtons = props => {\r\n  const { classes, startChapter } = props\r\n\r\n  return (\r\n    <Fragment>\r\n      <Button\r\n        variant=\"contained\"\r\n        size=\"large\"\r\n        color=\"primary\"\r\n        className={classes.button}\r\n        style={{ backgroundColor: \"#e0e0e0\", color: \"rgba(0, 0, 0, 0.87)\" }}\r\n        onClick={() => startChapter(\"quickplay\")}\r\n      >\r\n        <Icon>play_arrow</Icon> Quick Play 10 words\r\n      </Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        size=\"large\"\r\n        color=\"primary\"\r\n        className={classes.button}\r\n        onClick={() => startChapter(\"chapter1\")}\r\n      >\r\n        Book 1 Chapter 1\r\n      </Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        size=\"large\"\r\n        color=\"primary\"\r\n        className={classes.button}\r\n        onClick={() => startChapter(\"chapter12\")}\r\n      >\r\n        Book 1 Chapter 12\r\n      </Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        size=\"large\"\r\n        color=\"primary\"\r\n        className={classes.button}\r\n        onClick={() => startChapter(\"chapter13\")}\r\n      >\r\n        Book 1 Chapter 13\r\n      </Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        size=\"large\"\r\n        color=\"primary\"\r\n        className={classes.button}\r\n        onClick={() => startChapter(\"chapter14\")}\r\n      >\r\n        Book 1 Chapter 14\r\n      </Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        size=\"large\"\r\n        color=\"primary\"\r\n        className={classes.button}\r\n        onClick={() => startChapter(\"chapter15\")}\r\n      >\r\n        Book 1 Chapter 15\r\n      </Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        size=\"large\"\r\n        color=\"primary\"\r\n        className={classes.button}\r\n        onClick={() => startChapter(\"chapter16\")}\r\n      >\r\n        Book 1 Chapter 16\r\n      </Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        size=\"large\"\r\n        color=\"primary\"\r\n        className={classes.button}\r\n        onClick={() => startChapter(\"chapter2.1\")}\r\n      >\r\n        Book 2 Chapter 1\r\n      </Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        size=\"large\"\r\n        color=\"primary\"\r\n        className={classes.button}\r\n        onClick={() => startChapter(\"chapter2.2\")}\r\n      >\r\n        Book 2 Chapter 2\r\n      </Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        size=\"large\"\r\n        color=\"primary\"\r\n        className={classes.button}\r\n        onClick={() => startChapter(\"chapter2.3\")}\r\n      >\r\n        Book 2 Chapter 3\r\n      </Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        size=\"large\"\r\n        color=\"primary\"\r\n        className={classes.button}\r\n        onClick={() => startChapter(\"chapter2.4\")}\r\n      >\r\n        Book 2 Chapter 4\r\n      </Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        size=\"large\"\r\n        color=\"primary\"\r\n        className={classes.button}\r\n        onClick={() => startChapter(\"chapter2.5\")}\r\n      >\r\n        Book 2 Chapter 5\r\n      </Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        size=\"large\"\r\n        color=\"primary\"\r\n        className={classes.button}\r\n        onClick={() => startChapter(\"chapter2.6\")}\r\n      >\r\n        Book 2 Chapter 6\r\n      </Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        size=\"large\"\r\n        color=\"primary\"\r\n        className={classes.button}\r\n        onClick={() => startChapter(\"chapter2.7\")}\r\n      >\r\n        Book 2 Chapter 7\r\n      </Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        size=\"large\"\r\n        color=\"primary\"\r\n        className={classes.button}\r\n        onClick={() => startChapter(\"chapter2.8\")}\r\n      >\r\n        Book 2 Chapter 8\r\n      </Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        size=\"large\"\r\n        color=\"primary\"\r\n        className={classes.button}\r\n        onClick={() => startChapter(\"chapter2.9\")}\r\n      >\r\n        Book 2 Chapter 9\r\n      </Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        size=\"large\"\r\n        color=\"primary\"\r\n        className={classes.button}\r\n        onClick={() => startChapter(\"chapter2.10\")}\r\n      >\r\n        Book 2 Chapter 10\r\n      </Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        size=\"large\"\r\n        color=\"primary\"\r\n        className={classes.button}\r\n        onClick={() => startChapter(\"chapter2.11\")}\r\n      >\r\n        Book 2 Chapter 11\r\n      </Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        size=\"large\"\r\n        color=\"primary\"\r\n        className={classes.button}\r\n        onClick={() => startChapter(\"chapter2.12\")}\r\n      >\r\n        Book 2 Chapter 12\r\n      </Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        size=\"large\"\r\n        color=\"primary\"\r\n        className={classes.button}\r\n        onClick={() => startChapter(\"chapter2.13\")}\r\n      >\r\n        Book 2 Chapter 13\r\n      </Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        size=\"large\"\r\n        color=\"primary\"\r\n        className={classes.button}\r\n        onClick={() => startChapter(\"chapter2.14\")}\r\n      >\r\n        Book 2 Chapter 14\r\n      </Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        size=\"large\"\r\n        color=\"primary\"\r\n        className={classes.button}\r\n        onClick={() => startChapter(\"chapter2.15\")}\r\n      >\r\n        Book 2 Chapter 15\r\n      </Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        size=\"large\"\r\n        color=\"primary\"\r\n        className={classes.button}\r\n        onClick={() => startChapter(\"chapter2.16\")}\r\n      >\r\n        Book 2 Chapter 16\r\n      </Button>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default ChapterButtons\r\n","import React from \"react\"\r\nimport { withStyles } from \"@material-ui/core/styles\"\r\nimport ChooseChapterTitle from \"./ChooseChapterTitle\"\r\nimport PageFooter from \"./PageFooter\"\r\nimport ChapterButtons from \"./ChaptersButtons\"\r\nconst styles = {\r\n  button: { marginBottom: \"4px\", height: \"56px\" }\r\n}\r\n\r\nconst ChooseChapter = props => {\r\n  const { classes, startChapter, chooseChapterScrollTop } = props\r\n\r\n  return (\r\n    <div className=\"chooseChapterWrapper\">\r\n      <ChooseChapterTitle chooseChapterScrollTop={chooseChapterScrollTop} />\r\n      <div className=\"chooseChapter\">\r\n        <ChapterButtons classes={classes} startChapter={startChapter} />\r\n        <PageFooter />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withStyles(styles)(ChooseChapter)\r\n","import React from \"react\"\r\nimport Snackbar from \"@material-ui/core/Snackbar\"\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\nimport Icon from \"@material-ui/core/Icon\"\r\n\r\nfunction SimpleSnackbar(props) {\r\n  return (\r\n    <div>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\"\r\n        }}\r\n        open={props.showUpdateSnackBar}\r\n        onClose={props.handleCloseSnackBar}\r\n        ContentProps={{\r\n          \"aria-describedby\": \"message-id\"\r\n        }}\r\n        message={<span id=\"message-id\">New Update! Restart the app</span>}\r\n        action={[\r\n          <IconButton\r\n            key=\"close\"\r\n            aria-label=\"Close\"\r\n            color=\"inherit\"\r\n            className={\"snackBarCloseButton\"}\r\n            onClick={props.handleCloseSnackBar}\r\n          >\r\n            <Icon>close</Icon>\r\n          </IconButton>\r\n        ]}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SimpleSnackbar\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, { Component } from \"react\"\nimport { getWordsRandomized, scrambleOptions } from \"./vocabularyUtils\"\nimport \"./App.css\"\nimport QuizPage from \"./components/QuizPage\"\nimport { ResultPage } from \"./components/ResultPage\"\nimport ChooseChapter from \"./components/ChooseChapters\"\nimport { CSSTransition } from \"react-transition-group\"\nimport UpdateSnackBar from \"./components/UpdateSnackBar\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    serviceWorker.register({\n      onUpdate: this.handleServiceWorkerUpdate\n    })\n  }\n\n  handleServiceWorkerUpdate = registration => {\n    this.setState({ showUpdateSnackBar: true })\n  }\n\n  handleCloseSnackBar = (event, reason) => {\n    if (reason === \"clickaway\") {\n      console.log(\"click away\")\n      return\n    }\n\n    this.setState({ showUpdateSnackBar: false })\n  }\n\n  AppDidMount = node => {\n    if (node) {\n      node.addEventListener(\"scroll\", this.scrollListener)\n    }\n  }\n\n  scrollListener = event => {\n    this.setState({ chooseChapterScrollTop: event.target.scrollTop })\n  }\n\n  state = {\n    gameWords: [],\n    wrongAnswers: [],\n    answerOptions: [],\n    scrambledOptions: [],\n    questionIndex: 0,\n    answeredWrong: false,\n    showStartPage: true,\n    showTranslation: false,\n    chooseChapterScrollTop: 0,\n    showUpdateSnackBar: false\n  }\n\n  replay = () => {\n    this.setState({\n      showStartPage: true\n    })\n  }\n\n  replayIncorrectWords = () => {\n    const words = this.state.wrongAnswers\n    this.setState({\n      gameWords: words,\n      scrambledOptions: scrambleOptions(words[0]),\n      wrongAnswers: [],\n      answerOptions: [],\n      questionIndex: 0,\n      answeredWrong: false,\n      showTranslation: false\n    })\n  }\n\n  setNextQuestion = () => {\n    const { gameWords, questionIndex } = this.state\n    const question = gameWords[questionIndex]\n    const newQuestionIndex = questionIndex + 1\n    this.setState({\n      questionIndex: newQuestionIndex,\n      currentWord: question,\n      answeredWrong: false,\n      scrambledOptions: scrambleOptions(gameWords[newQuestionIndex]),\n      showTranslation: false\n    })\n  }\n  setShowTranslation = showTranslation => {\n    this.setState({ showTranslation })\n  }\n  optionPress = answerOption => {\n    if (answerOption === this.getCurrentWord()) {\n      this.setNextQuestion()\n    } else if (!this.state.answeredWrong) {\n      let newWrongAnswers = this.state.wrongAnswers\n      newWrongAnswers.push(this.getCurrentWord())\n      this.setState({ answeredWrong: true, wrongAnswers: newWrongAnswers })\n    }\n  }\n\n  getCurrentWord = () => {\n    const { gameWords, questionIndex } = this.state\n    return gameWords[questionIndex]\n  }\n\n  isGameFinished = () => {\n    return (\n      this.state.gameWords &&\n      this.state.questionIndex >= this.state.gameWords.length\n    )\n  }\n  getGameProgress = () => {\n    if (this.state.gameWords && this.state.questionIndex) {\n      return (this.state.questionIndex / this.state.gameWords.length) * 100\n    }\n    return 0\n  }\n\n  startChapter = chapter => {\n    const wordsRandomized = getWordsRandomized([chapter])\n    this.setState({\n      gameWords: wordsRandomized,\n      scrambledOptions: scrambleOptions(wordsRandomized[0]),\n      showStartPage: false,\n      questionIndex: 0,\n      answeredWrong: false,\n      showTranslation: false,\n      wrongAnswers: []\n    })\n  }\n  renderChooseChapter = () => {\n    return (\n      <ChooseChapter\n        chooseChapterScrollTop={this.state.chooseChapterScrollTop}\n        startChapter={this.startChapter}\n      />\n    )\n  }\n\n  renderResultPage = () => {\n    return (\n      <ResultPage\n        wrongAnswers={this.state.wrongAnswers}\n        gameWords={this.state.gameWords}\n        replay={this.replay}\n        replayIncorrectWords={this.replayIncorrectWords}\n      />\n    )\n  }\n\n  renderQuizPage = () => {\n    return (\n      <QuizPage\n        replay={this.replay}\n        getCurrentWord={this.getCurrentWord}\n        answeredWrong={this.state.answeredWrong}\n        gameWords={this.state.gameWords}\n        optionPress={this.optionPress}\n        scrambledOptions={this.state.scrambledOptions}\n        progress={this.getGameProgress()}\n        setShowTranslation={this.setShowTranslation}\n        showTranslation={this.state.showTranslation}\n      />\n    )\n  }\n  render() {\n    return (\n      <div ref={this.AppDidMount} className=\"App\">\n        {this.renderChooseChapter()}\n        <CSSTransition\n          in={!this.state.showStartPage}\n          timeout={300}\n          classNames=\"quizAndResultWrapper\"\n        >\n          <div className=\"quizAndResultWrapper\">\n            {this.isGameFinished()\n              ? this.renderResultPage()\n              : this.renderQuizPage()}\n          </div>\n        </CSSTransition>\n        <UpdateSnackBar\n          handleCloseSnackBar={this.handleCloseSnackBar}\n          showUpdateSnackBar={this.state.showUpdateSnackBar}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\n//import * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.register()\n"],"sourceRoot":""}