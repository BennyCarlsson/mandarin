{"version":3,"sources":["vocabularyUtils.js","components/Options.js","components/TheWord.js","components/QuizPage.js","components/ListWrongAnswers.js","components/ResultPage.js","components/BetaVersionTag.js","components/ChooseChapterTitle.js","components/ChooseChapters.js","App.js","serviceWorker.js","index.js"],"names":["getWordsRandomized","chapters","arguments","length","undefined","wordList","vocabulary","words","forEach","chapter","concat","shuffle","slice","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","scrambleOptions","rightOptionWord","scrambledOptions","relevantWords","getAllWords","filter","word","chinese","currentWord","includes","pinyin","push","Object","values","Options","_this$props","this","props","optionPress","react_default","a","createElement","className","Options_OptionsButton","gameWord","Component","style","textTransform","fontSize","OptionsButton","Button_default","variant","size","color","onClick","TheWord","setShowTranslation","showTranslation","answeredWrong","english","QuizPage","classes","progress","components_TheWord","getCurrentWord","components_Options","gameWords","LinearProgress_default","value","root","linearProgressDeterminate","bar","linearProgressDeterminateBar","withStyles","theme","backgroundColor","width","ListWrongAnswers","getWordItems","wrongAnswers","_this","map","ListWrongAnswers_WrongWord","ExpansionPanel_default","ExpansionPanelSummary_default","expandIcon","Icon_default","aria-controls","id","Typography_default","ExpansionPanelDetails_default","List_default","WrongWord","ListItem_default","ListItemText_default","primary","ResultPage","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","key","styles","primaryColor","replay","replayIncorrectWords","numberOfQuestions","numberOfWrongAnswers","numberOfRightAnswers","gutterBottom","ResultPage_ReplayButtons","components_ListWrongAnswers","ReplayButtons","react","Fab_default","aria-label","BetaVersionTag","withTheme","ChooseChapterTitle","chooseChapterScrollTop","console","log","position","React","button","marginBottom","height","startChapter","components_ChooseChapterTitle","App","AppDidMount","node","addEventListener","scrollListener","event","setState","target","scrollTop","state","answerOptions","questionIndex","showStartPage","wordsRandomized","setNextQuestion","_this$state","question","newQuestionIndex","answerOption","newWrongAnswers","_this$state2","isGameFinished","getGameProgress","ref","components_BetaVersionTag","ChooseChapters","ResultPage_ResultPage","components_QuizPage","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e66bb8ae.chunk.js","sourcesContent":["import vocabulary from \"./vocabulary\"\r\n\r\nexport const getWordsRandomized = (chapters = [\"chapter1\"]) => {\r\n  let wordList = vocabulary\r\n  let words = []\r\n  chapters.forEach(chapter => (words = words.concat(wordList[chapter])))\r\n  return shuffle(words.slice())\r\n}\r\n\r\nconst shuffle = array => {\r\n  var currentIndex = array.length,\r\n    temporaryValue,\r\n    randomIndex\r\n\r\n  // While there remain elements to shuffle...\r\n  while (0 !== currentIndex) {\r\n    // Pick a remaining element...\r\n    randomIndex = Math.floor(Math.random() * currentIndex)\r\n    currentIndex -= 1\r\n\r\n    // And swap it with the current element.\r\n    temporaryValue = array[currentIndex]\r\n    array[currentIndex] = array[randomIndex]\r\n    array[randomIndex] = temporaryValue\r\n  }\r\n\r\n  return array\r\n}\r\n\r\nexport const scrambleOptions = rightOptionWord => {\r\n  if (!rightOptionWord) return []\r\n  const gameWords = getAllWords()\r\n  let scrambledOptions = []\r\n\r\n  //Todo fix problem if to few of a word with that length\r\n  const relevantWords = gameWords.filter(\r\n    word => word.chinese.length === rightOptionWord.chinese.length\r\n  )\r\n  while (scrambledOptions.length < 4 && relevantWords.length > 4) {\r\n    const randomNumber = Math.floor(Math.random() * relevantWords.length)\r\n    const currentWord = relevantWords[randomNumber]\r\n    if (\r\n      currentWord !== rightOptionWord &&\r\n      !scrambledOptions.includes(currentWord) &&\r\n      currentWord.pinyin !== rightOptionWord.pinyin\r\n    ) {\r\n      scrambledOptions.push(currentWord)\r\n    }\r\n  }\r\n\r\n  const nr = Math.floor(Math.random() * 4)\r\n  scrambledOptions[nr] = rightOptionWord\r\n  return scrambledOptions\r\n}\r\n\r\n//Todo this should be done once at the start, saved and reused\r\nconst getAllWords = () => {\r\n  let wordList = []\r\n  Object.values(vocabulary).forEach(chapter =>\r\n    chapter.forEach(word => wordList.push(word))\r\n  )\r\n  return wordList\r\n}\r\n","import React, { Component } from \"react\"\r\nimport \"../App.css\"\r\nimport Button from \"@material-ui/core/Button\"\r\n\r\nclass Options extends Component {\r\n  render() {\r\n    const { optionPress, scrambledOptions } = this.props\r\n    return (\r\n      <div className=\"optionsDiv\">\r\n        <div className=\"optionButton\">\r\n          <OptionsButton\r\n            optionPress={() => optionPress(scrambledOptions[0])}\r\n            gameWord={scrambledOptions[0] ? scrambledOptions[0].pinyin : \"...\"}\r\n          />\r\n        </div>\r\n        <div className=\"optionButton\">\r\n          <OptionsButton\r\n            optionPress={() => optionPress(scrambledOptions[1])}\r\n            gameWord={scrambledOptions[1] ? scrambledOptions[1].pinyin : \"...\"}\r\n          />\r\n        </div>\r\n        <div className=\"optionButton\">\r\n          <OptionsButton\r\n            optionPress={() => optionPress(scrambledOptions[2])}\r\n            gameWord={scrambledOptions[2] ? scrambledOptions[2].pinyin : \"...\"}\r\n          />\r\n        </div>\r\n        <div className=\"optionButton\">\r\n          <OptionsButton\r\n            optionPress={() => optionPress(scrambledOptions[3])}\r\n            gameWord={scrambledOptions[3] ? scrambledOptions[3].pinyin : \"...\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst style = {\r\n  textTransform: \"none\",\r\n  fontSize: \"1.5rem\"\r\n}\r\n\r\nconst OptionsButton = props => {\r\n  return (\r\n    <span className=\"optionButton\">\r\n      <Button\r\n        style={style}\r\n        className=\"optionButton\"\r\n        variant=\"contained\"\r\n        size=\"large\"\r\n        color=\"primary\"\r\n        onClick={props.optionPress}\r\n      >\r\n        {props.gameWord}\r\n      </Button>\r\n    </span>\r\n  )\r\n}\r\n\r\nexport default Options\r\n","import React from \"react\"\r\n\r\nconst TheWord = props => {\r\n  return (\r\n    <div\r\n      className=\"theWordDiv\"\r\n      onClick={() => props.setShowTranslation(!props.showTranslation)}\r\n    >\r\n      <h1\r\n        className={\r\n          props.currentWord && props.currentWord.chinese.length > 3\r\n            ? \"theWordSmall\"\r\n            : \"theWord\"\r\n        }\r\n      >\r\n        {props.currentWord && props.currentWord.chinese}\r\n      </h1>\r\n      <span className=\"wrong-pinyin\">\r\n        {props.answeredWrong && props.currentWord && props.currentWord.pinyin}\r\n      </span>\r\n      <span className=\"wrong-eng\">\r\n        {props.answeredWrong && props.currentWord && props.currentWord.english}\r\n        {props.showTranslation &&\r\n          !props.answeredWrong &&\r\n          !props.showTranslation &&\r\n          props.currentWord.english}\r\n      </span>\r\n      <span>\r\n        {props.showTranslation &&\r\n          !props.answeredWrong &&\r\n          props.currentWord.english}\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TheWord\r\n","import React, { Component } from \"react\"\r\nimport Options from \"./Options\"\r\nimport TheWord from \"./TheWord\"\r\nimport { withStyles } from \"@material-ui/core/styles\"\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\"\r\n\r\nconst styles = theme => ({\r\n  linearProgressDeterminate: {\r\n    backgroundColor: \"#8f9bee\",\r\n    width: \"100vw\"\r\n  },\r\n  linearProgressDeterminateBar: {\r\n    backgroundColor: \"#3f51b5\"\r\n  }\r\n})\r\n\r\nclass QuizPage extends Component {\r\n  render() {\r\n    const { classes, progress } = this.props\r\n    return (\r\n      <div className=\"quizPageWrapper\">\r\n        <TheWord\r\n          currentWord={this.props.getCurrentWord()}\r\n          answeredWrong={this.props.answeredWrong}\r\n          setShowTranslation={this.props.setShowTranslation}\r\n          showTranslation={this.props.showTranslation}\r\n        />\r\n        <Options\r\n          gameWords={this.props.gameWords}\r\n          optionPress={this.props.optionPress}\r\n          scrambledOptions={this.props.scrambledOptions}\r\n        />\r\n        <LinearProgress\r\n          variant=\"determinate\"\r\n          value={progress}\r\n          classes={{\r\n            root: classes.linearProgressDeterminate,\r\n            bar: classes.linearProgressDeterminateBar\r\n          }}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(QuizPage)\r\n","import React, { Component } from \"react\"\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\"\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\"\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\"\r\nimport List from \"@material-ui/core/List\"\r\nimport ListItem from \"@material-ui/core/ListItem\"\r\nimport ListItemText from \"@material-ui/core/ListItemText\"\r\nimport Icon from \"@material-ui/core/Icon\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\n\r\nclass ListWrongAnswers extends Component {\r\n  getWordItems = () => {\r\n    const wrongAnswers = this.props.wrongAnswers\r\n    return wrongAnswers && wrongAnswers.map(word => <WrongWord word={word} />)\r\n  }\r\n  render() {\r\n    return (\r\n      <ExpansionPanel className=\"expansionPanel\">\r\n        <ExpansionPanelSummary\r\n          expandIcon={<Icon>keyboard_arrow_down</Icon>}\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"\r\n        >\r\n          <Typography>Show all wrong answers</Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n          <List>{this.getWordItems()}</List>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n    )\r\n  }\r\n}\r\n\r\nconst WrongWord = props => {\r\n  return (\r\n    <ListItem>\r\n      <ListItemText\r\n        primary={\r\n          <Typography variant=\"h4\" style={{ color: \"#00000\" }}>\r\n            {props.word.pinyin} - {props.word.chinese}\r\n          </Typography>\r\n        }\r\n      />\r\n    </ListItem>\r\n  )\r\n}\r\nexport default ListWrongAnswers\r\n","import React, { Component, Fragment } from \"react\"\r\nimport { withTheme } from \"@material-ui/core/styles\"\r\nimport Fab from \"@material-ui/core/Fab\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport Icon from \"@material-ui/core/Icon\"\r\nimport ListWrongAnswers from \"./ListWrongAnswers\"\r\nimport Button from \"@material-ui/core/Button\"\r\n\r\nexport class ResultPage extends Component {\r\n  render() {\r\n    const styles = {\r\n      primaryColor: {\r\n        color: \"white\"\r\n      }\r\n    }\r\n    const { gameWords, wrongAnswers, replay, replayIncorrectWords } = this.props\r\n    const numberOfQuestions = gameWords ? gameWords.length : 0\r\n    const numberOfWrongAnswers = wrongAnswers ? wrongAnswers.length : 0\r\n    const numberOfRightAnswers = numberOfQuestions - numberOfWrongAnswers\r\n    return (\r\n      <div className=\"resultPageWrapper\">\r\n        <Typography style={styles.primaryColor} variant=\"display4\" gutterBottom>\r\n          很好!\r\n        </Typography>\r\n        <Typography style={styles.primaryColor} variant=\"display4\" gutterBottom>\r\n          {numberOfRightAnswers} / {numberOfQuestions}\r\n        </Typography>\r\n        <Typography\r\n          style={styles.primaryColor}\r\n          variant=\"subheading\"\r\n          gutterBottom\r\n        >\r\n          You got {numberOfRightAnswers} correct answers out of{\" \"}\r\n          {numberOfQuestions}\r\n        </Typography>\r\n        <br />\r\n\r\n        <ReplayButtons\r\n          replay={replay}\r\n          replayIncorrectWords={replayIncorrectWords}\r\n          numberOfWrongAnswers={numberOfWrongAnswers}\r\n        />\r\n        {numberOfWrongAnswers > 0 ? (\r\n          <ListWrongAnswers wrongAnswers={wrongAnswers} />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst ReplayButtons = props => {\r\n  return (\r\n    <Fragment>\r\n      {props.numberOfWrongAnswers > 0 ? (\r\n        <Fab\r\n          variant=\"extended\"\r\n          aria-label=\"replay\"\r\n          onClick={() => props.replayIncorrectWords()}\r\n        >\r\n          <Icon>replay</Icon>\r\n          <p>Incorrect words ({props.numberOfWrongAnswers})</p>\r\n        </Fab>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <Button\r\n        size=\"medium\"\r\n        color=\"inherit\"\r\n        aria-label=\"replay\"\r\n        onClick={() => props.replay()}\r\n      >\r\n        <Icon>arrow_back</Icon>\r\n        <p> Back </p>\r\n      </Button>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default withTheme()(ResultPage)\r\n","import React from \"react\"\r\n\r\nconst BetaVersionTag = () => {\r\n  return (\r\n    <div className=\"betaTag\">\r\n      <span className=\"beta\">BETA</span>\r\n      <span className=\"versionNr\"> v.0.2.8</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BetaVersionTag\r\n","import React from \"react\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\n\r\nclass ChooseChapterTitle extends React.Component {\r\n  render() {\r\n    const { chooseChapterScrollTop } = this.props\r\n    console.log(\"asd\", chooseChapterScrollTop)\r\n    return (\r\n      <div className=\"pickChapterTitle\">\r\n        <Typography\r\n          style={{\r\n            color: \"white\",\r\n            position: \"absolute\",\r\n            fontSize: 30 - chooseChapterScrollTop / 10 + \"px\"\r\n          }}\r\n          variant=\"display1\"\r\n          gutterBottom\r\n        >\r\n          Level A Chinese Quize\r\n        </Typography>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ChooseChapterTitle\r\n","import React from \"react\"\r\nimport { withStyles } from \"@material-ui/core/styles\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport ChooseChapterTitle from \"./ChooseChapterTitle\"\r\n\r\nconst styles = {\r\n  button: { marginBottom: \"4px\", height: \"56px\" }\r\n}\r\n\r\n//Todo make this dynamic\r\nconst ChooseChapter = props => {\r\n  const { classes, startChapter, chooseChapterScrollTop } = props\r\n\r\n  return (\r\n    <div className=\"chooseChapterWrapper\">\r\n      <ChooseChapterTitle chooseChapterScrollTop={chooseChapterScrollTop} />\r\n      <div className=\"chooseChapter\">\r\n        <Button\r\n          variant=\"contained\"\r\n          size=\"large\"\r\n          color=\"primary\"\r\n          className={classes.button}\r\n          onClick={() => startChapter(\"chapter1\")}\r\n        >\r\n          Book 1 Chapter 1\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          size=\"large\"\r\n          color=\"primary\"\r\n          className={classes.button}\r\n          onClick={() => startChapter(\"chapter12\")}\r\n        >\r\n          Book 1 Chapter 12\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          size=\"large\"\r\n          color=\"primary\"\r\n          className={classes.button}\r\n          onClick={() => startChapter(\"chapter13\")}\r\n        >\r\n          Book 1 Chapter 13\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          size=\"large\"\r\n          color=\"primary\"\r\n          className={classes.button}\r\n          onClick={() => startChapter(\"chapter14\")}\r\n        >\r\n          Book 1 Chapter 14\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          size=\"large\"\r\n          color=\"primary\"\r\n          className={classes.button}\r\n          onClick={() => startChapter(\"chapter15\")}\r\n        >\r\n          Book 1 Chapter 15\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          size=\"large\"\r\n          color=\"primary\"\r\n          className={classes.button}\r\n          onClick={() => startChapter(\"chapter16\")}\r\n        >\r\n          Book 1 Chapter 16\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          size=\"large\"\r\n          color=\"primary\"\r\n          className={classes.button}\r\n          onClick={() => startChapter(\"chapter2.1\")}\r\n        >\r\n          Book 2 Chapter 1\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          size=\"large\"\r\n          color=\"primary\"\r\n          className={classes.button}\r\n          onClick={() => startChapter(\"chapter2.2\")}\r\n        >\r\n          Book 2 Chapter 2\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          size=\"large\"\r\n          color=\"primary\"\r\n          className={classes.button}\r\n          onClick={() => startChapter(\"chapter2.3\")}\r\n        >\r\n          Book 2 Chapter 3\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          size=\"large\"\r\n          color=\"primary\"\r\n          className={classes.button}\r\n          onClick={() => startChapter(\"chapter2.4\")}\r\n        >\r\n          Book 2 Chapter 4\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          size=\"large\"\r\n          color=\"primary\"\r\n          className={classes.button}\r\n          onClick={() => startChapter(\"chapter2.5\")}\r\n        >\r\n          Book 2 Chapter 5\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          size=\"large\"\r\n          color=\"primary\"\r\n          className={classes.button}\r\n          onClick={() => startChapter(\"chapter2.6\")}\r\n        >\r\n          Book 2 Chapter 6\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          size=\"large\"\r\n          color=\"primary\"\r\n          className={classes.button}\r\n          onClick={() => startChapter(\"chapter2.7\")}\r\n        >\r\n          Book 2 Chapter 7\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          size=\"large\"\r\n          color=\"primary\"\r\n          className={classes.button}\r\n          onClick={() => startChapter(\"chapter2.8\")}\r\n        >\r\n          Book 2 Chapter 8\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withStyles(styles)(ChooseChapter)\r\n","import React, { Component } from \"react\"\nimport { getWordsRandomized, scrambleOptions } from \"./vocabularyUtils\"\nimport \"./App.css\"\nimport QuizPage from \"./components/QuizPage\"\nimport { ResultPage } from \"./components/ResultPage\"\nimport BetaVersionTag from \"./components/BetaVersionTag\"\nimport ChooseChapter from \"./components/ChooseChapters\"\n\nclass App extends Component {\n  AppDidMount = node => {\n    if (node) {\n      node.addEventListener(\"scroll\", this.scrollListener)\n    }\n  }\n\n  scrollListener = event => {\n    this.setState({ chooseChapterScrollTop: event.target.scrollTop })\n  }\n\n  state = {\n    gameWords: [],\n    wrongAnswers: [],\n    answerOptions: [],\n    scrambledOptions: [],\n    questionIndex: 0,\n    answeredWrong: false,\n    showStartPage: true,\n    showTranslation: false,\n    chooseChapterScrollTop: 0\n  }\n\n  replay = () => {\n    const wordsRandomized = getWordsRandomized()\n    this.setState({\n      gameWords: wordsRandomized,\n      scrambledOptions: scrambleOptions(wordsRandomized[0]),\n      wrongAnswers: [],\n      answerOptions: [],\n      questionIndex: 0,\n      answeredWrong: false,\n      showStartPage: true,\n      showTranslation: false\n    })\n  }\n\n  replayIncorrectWords = () => {\n    const words = this.state.wrongAnswers\n    this.setState({\n      gameWords: words,\n      scrambledOptions: scrambleOptions(words[0]),\n      wrongAnswers: [],\n      answerOptions: [],\n      questionIndex: 0,\n      answeredWrong: false,\n      showTranslation: false\n    })\n  }\n\n  setNextQuestion = () => {\n    const { gameWords, questionIndex } = this.state\n    const question = gameWords[questionIndex]\n    const newQuestionIndex = questionIndex + 1\n    this.setState({\n      questionIndex: newQuestionIndex,\n      currentWord: question,\n      answeredWrong: false,\n      scrambledOptions: scrambleOptions(gameWords[newQuestionIndex]),\n      showTranslation: false\n    })\n  }\n  setShowTranslation = showTranslation => {\n    this.setState({ showTranslation })\n  }\n  optionPress = answerOption => {\n    if (answerOption === this.getCurrentWord()) {\n      this.setNextQuestion()\n    } else if (!this.state.answeredWrong) {\n      let newWrongAnswers = this.state.wrongAnswers\n      newWrongAnswers.push(this.getCurrentWord())\n      this.setState({ answeredWrong: true, wrongAnswers: newWrongAnswers })\n    }\n  }\n\n  getCurrentWord = () => {\n    const { gameWords, questionIndex } = this.state\n    return gameWords[questionIndex]\n  }\n\n  isGameFinished = () => {\n    return (\n      this.state.gameWords &&\n      this.state.questionIndex >= this.state.gameWords.length\n    )\n  }\n  getGameProgress = () => {\n    if (this.state.gameWords && this.state.questionIndex) {\n      return (this.state.questionIndex / this.state.gameWords.length) * 100\n    }\n    return 0\n  }\n\n  startChapter = chapter => {\n    const wordsRandomized = getWordsRandomized([chapter])\n    this.setState({\n      gameWords: wordsRandomized,\n      scrambledOptions: scrambleOptions(wordsRandomized[0]),\n      showStartPage: false\n    })\n  }\n\n  render() {\n    // Game logic here works but is a mess Todo\n    return (\n      <div ref={this.AppDidMount} className=\"App\">\n        <BetaVersionTag />\n        {this.state.showStartPage ? (\n          <ChooseChapter\n            chooseChapterScrollTop={this.state.chooseChapterScrollTop}\n            startChapter={this.startChapter}\n          />\n        ) : this.isGameFinished() ? (\n          <ResultPage\n            wrongAnswers={this.state.wrongAnswers}\n            gameWords={this.state.gameWords}\n            replay={this.replay}\n            replayIncorrectWords={this.replayIncorrectWords}\n          />\n        ) : (\n          <QuizPage\n            getCurrentWord={this.getCurrentWord}\n            answeredWrong={this.state.answeredWrong}\n            gameWords={this.state.gameWords}\n            optionPress={this.optionPress}\n            scrambledOptions={this.state.scrambledOptions}\n            progress={this.getGameProgress()}\n            setShowTranslation={this.setShowTranslation}\n            showTranslation={this.state.showTranslation}\n          />\n        )}\n      </div>\n    )\n  }\n}\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}